<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.Mapper.BookMapper">
    <!-- 结果映射 -->
    <resultMap id="BookResultMap" type="com.example.springboot.entity.Book">
        <id column="id" property="bookId"/>
        <result column="isbn" property="isbn"/>
        <result column="title" property="title"/>
        <result column="author" property="author"/>
        <result column="publisher" property="publisher"/>
        <result column="publish_date" property="publishDate"/>
        <result column="category_id" property="categoryId"/>
        <result column="price" property="price"/>
        <result column="description" property="description"/>
        <result column="location" property="location"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="name" property="categoryName"/>
    </resultMap>

    <!-- 所有字段 -->
    <sql id="AllColumns">
        id, isbn, title, author, publisher, publish_date, category_id, price, description, location, status, create_time, update_time
    </sql>

    <!-- 添加图书 -->
    <insert id="insert" parameterType="com.example.springboot.entity.Book" useGeneratedKeys="true" keyProperty="bookId">
        INSERT INTO book (isbn, title, author, publisher, publish_date, category_id, price, description, location, status)
        VALUES (#{isbn}, #{title}, #{author}, #{publisher}, #{publishDate}, #{categoryId}, #{price}, #{description}, #{location}, #{status})
    </insert>

    <!-- 更新图书 -->
    <update id="update" parameterType="com.example.springboot.entity.Book">
        UPDATE book
        <set>
            <if test="isbn != null">isbn = #{isbn},</if>
            <if test="title != null">title = #{title},</if>
            <if test="author != null">author = #{author},</if>
            <if test="publisher != null">publisher = #{publisher},</if>
            <if test="publishDate != null">publish_date = #{publishDate},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="description != null">description = #{description},</if>
            <if test="location != null">location = #{location},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE id = #{bookId}
    </update>

    <!-- 删除图书 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM book WHERE id = #{bookId}
    </delete>

    <!-- 根据ID查询图书 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BookResultMap">
        SELECT b.*, c.name
        FROM book b
        LEFT JOIN category c ON b.category_id = c.id
        WHERE b.id = #{bookId}
    </select>

    <!-- 根据ISBN查询图书 -->
    <select id="selectByIsbn" parameterType="java.lang.String" resultMap="BookResultMap">
        SELECT b.*, c.name
        FROM book b
        LEFT JOIN category c ON b.category_id = c.id
        WHERE b.isbn = #{isbn}
    </select>

    <!-- 条件查询图书 -->
    <select id="selectByCondition" parameterType="com.example.springboot.entity.Book" resultMap="BookResultMap">
        SELECT b.*, c.name
        FROM book b
        LEFT JOIN category c ON b.category_id = c.id
        <where>
            <if test="isbn != null and isbn != ''">AND b.isbn LIKE CONCAT('%', #{isbn}, '%')</if>
            <if test="title != null and title != ''">AND b.title LIKE CONCAT('%', #{title}, '%')</if>
            <if test="author != null and author != ''">AND b.author LIKE CONCAT('%', #{author}, '%')</if>
            <if test="publisher != null and publisher != ''">AND b.publisher LIKE CONCAT('%', #{publisher}, '%')</if>
            <if test="categoryId != null">AND b.category_id = #{categoryId}</if>
            <if test="status != null">AND b.status = #{status}</if>
        </where>
        ORDER BY b.create_time DESC
    </select>

    <!-- 查询所有图书 -->
    <select id="selectAll" resultMap="BookResultMap">
        SELECT b.*, c.name
        FROM book b
        LEFT JOIN category c ON b.category_id = c.id
        ORDER BY b.create_time DESC
    </select>

    <!-- 更新图书状态 -->
    <update id="updateStatus">
        UPDATE book SET status = #{status} WHERE id = #{bookId}
    </update>

    <!-- 根据分类ID查询图书 -->
    <select id="selectByCategoryId" parameterType="java.lang.Long" resultMap="BookResultMap">
        SELECT b.*, c.name
        FROM book b
        LEFT JOIN category c ON b.category_id = c.id
        WHERE b.category_id = #{categoryId}
        ORDER BY b.create_time DESC
    </select>
</mapper> 